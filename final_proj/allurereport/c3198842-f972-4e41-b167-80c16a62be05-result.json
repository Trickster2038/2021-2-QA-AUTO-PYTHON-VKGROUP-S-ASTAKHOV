{"name": "test_double_email", "status": "skipped", "statusDetails": {"message": "XFAIL error 500\n\nAssertionError: assert not True\n +  where True = <bound method LoginPage.notification_include of <ui.pages.register_page.RegisterPage object at 0x7fb4541983a0>>('internal server error')\n +    where <bound method LoginPage.notification_include of <ui.pages.register_page.RegisterPage object at 0x7fb4541983a0>> = <ui.pages.register_page.RegisterPage object at 0x7fb4541983a0>.notification_include\n +      where <ui.pages.register_page.RegisterPage object at 0x7fb4541983a0> = <test_ui_forms_negative.TestRegisterPageNegative object at 0x7fb4541b4580>.register_page", "trace": "self = <test_ui_forms_negative.TestRegisterPageNegative object at 0x7fb4541b4580>\n\n    @pytest.mark.xfail(reason=\"error 500\")\n    def test_double_email(self):\n        '''\n        1 - Go to registration page\n        2 - Register user\n        3 - Return to registration page\n        4 - Try to register with same email\n        3 - Check notifications dont include 500 error\n        '''\n        self.register_page.go_to_this_page()\n        self.register_page.register(\n            self.fake_person.username,\n            self.fake_person.email,\n            self.fake_person.password,\n            self.fake_person.password, True)\n        self.main_page.logout()\n        self.register_page.go_to_this_page()\n        self.register_page.register(\n        self.fake_person.username + '2',\n        self.fake_person.email,\n        self.fake_person.password,\n        self.fake_person.password, True)\n        assert self.register_page.blocked_on_page()\n>       assert not self.register_page.notification_include('internal server error')\nE       AssertionError: assert not True\nE        +  where True = <bound method LoginPage.notification_include of <ui.pages.register_page.RegisterPage object at 0x7fb4541983a0>>('internal server error')\nE        +    where <bound method LoginPage.notification_include of <ui.pages.register_page.RegisterPage object at 0x7fb4541983a0>> = <ui.pages.register_page.RegisterPage object at 0x7fb4541983a0>.notification_include\nE        +      where <ui.pages.register_page.RegisterPage object at 0x7fb4541983a0> = <test_ui_forms_negative.TestRegisterPageNegative object at 0x7fb4541b4580>.register_page\n\ntest_ui_forms_negative.py:194: AssertionError"}, "description": "\n        1 - Go to registration page\n        2 - Register user\n        3 - Return to registration page\n        4 - Try to register with same email\n        3 - Check notifications dont include 500 error\n        ", "steps": [{"name": "register", "status": "passed", "parameters": [{"name": "username", "value": "'Gregory'"}, {"name": "email", "value": "'Glover@gmail.com'"}, {"name": "password", "value": "'governmentwhetherafter'"}, {"name": "confirm", "value": "'governmentwhetherafter'"}, {"name": "accept_box", "value": "True"}], "start": 1639861531529, "stop": 1639861533593}, {"name": "logout with url", "status": "passed", "start": 1639861533593, "stop": 1639861533777}, {"name": "register", "status": "passed", "parameters": [{"name": "username", "value": "'Gregory2'"}, {"name": "email", "value": "'Glover@gmail.com'"}, {"name": "password", "value": "'governmentwhetherafter'"}, {"name": "confirm", "value": "'governmentwhetherafter'"}, {"name": "accept_box", "value": "True"}], "start": 1639861533890, "stop": 1639861535557}, {"name": "check notification", "status": "passed", "attachments": [{"name": "notification", "source": "ee51f4fc-5db8-42dd-8305-4ef15ce354be-attachment.png", "type": "image/png"}], "parameters": [{"name": "msg", "value": "'internal server error'"}], "start": 1639861535563, "stop": 1639861536390}], "start": 1639861530865, "stop": 1639861536390, "uuid": "c10b3419-17b9-4ed2-8a2e-0da9954127c7", "historyId": "45ac04679233b71fa67c5e55def99c83", "testCaseId": "9c43ced96f6b234cfd56b01faf4e0e61", "fullName": "test_folder.test_ui.test_ui_forms_negative.TestRegisterPageNegative#test_double_email", "labels": [{"name": "epic", "value": "UI"}, {"name": "feature", "value": "Register negative"}, {"name": "tag", "value": "UI"}, {"name": "tag", "value": "@pytest.mark.xfail(reason='error 500')"}, {"name": "parentSuite", "value": "test_folder.test_ui"}, {"name": "suite", "value": "test_ui_forms_negative"}, {"name": "subSuite", "value": "TestRegisterPageNegative"}, {"name": "host", "value": "gwynbleidd-NBR-WAX9"}, {"name": "thread", "value": "159889-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_folder.test_ui.test_ui_forms_negative"}]}