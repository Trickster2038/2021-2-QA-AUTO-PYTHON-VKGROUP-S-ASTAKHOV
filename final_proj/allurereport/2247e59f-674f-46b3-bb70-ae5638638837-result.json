{"name": "test_tabs_valid[tab3-link_pairs3]", "status": "skipped", "statusDetails": {"message": "XFAIL mismatched links\n\nAssertionError: assert False\n +  where False = <bound method BasePage.url_include of <ui.pages.base.BasePage object at 0x7fa0d1e3bf40>>('cent')\n +    where <bound method BasePage.url_include of <ui.pages.base.BasePage object at 0x7fa0d1e3bf40>> = <ui.pages.base.BasePage object at 0x7fa0d1e3bf40>.url_include\n +      where <ui.pages.base.BasePage object at 0x7fa0d1e3bf40> = <test_main_page.TestMainPage object at 0x7fa0d1e277f0>.base_page", "trace": "self = <test_main_page.TestMainPage object at 0x7fa0d1e277f0>\ntab = ('xpath', '//a[contains(text(), \"Linux\")]')\nlink_pairs = [(('xpath', '//a[contains(text(), \"Download Centos7\")]'), 'cent')]\n\n    @pytest.mark.parametrize(\"tab, link_pairs\",\n                             [\n                                 (MainPageLocators.TAB_PYTHON,\n                                  [\n                                      (MainPageLocators.LINK_FLASK, 'flask'),\n                                  ]),\n                                 (MainPageLocators.TAB_NETWORK,\n                                  [\n                                      (MainPageLocators.LINK_WIRESHARK_NEWS, 'news'),\n                                      (MainPageLocators.LINK_WIRESHARK_DOWNLOAD,\n                                       'download'),\n                                      (MainPageLocators.LINK_EXAMPLES, 'examples')\n                                  ]),\n                                 pytest.param(MainPageLocators.TAB_PYTHON,\n                                              [(\n                                                  MainPageLocators.LINK_PYHTON_HISTORY, 'History_of_Python')\n                                               ], marks=pytest.mark.xfail(reason=\"no new tab\")),\n                                 pytest.param(MainPageLocators.TAB_LINUX,\n                                              [(\n                                                  MainPageLocators.LINK_CENTOS, 'cent')\n                                               ], marks=pytest.mark.xfail(reason=\"mismatched links\"))\n                             ])\n    def test_tabs_valid(self, tab, link_pairs):\n        '''\n        1 - Login (fixture)\n        2 - Go to main page\n        3 - Move to top bar tab\n        4 - Click to link in tab\n        5 - Move to last tab\n        6 - Check url\n        7 - Check that new new tab is opened\n        '''\n        for pair in link_pairs:\n            self.main_page.go_to_this_page()\n            self.main_page.driver.refresh()\n            elem = self.main_page.find(tab)\n            hover = ActionChains(self.driver).move_to_element(elem)\n            hover.perform()\n            n_tabs = len(self.driver.window_handles)\n            time.sleep(1)\n            self.main_page.click(pair[0])\n            self.base_page.switch_to_last_tab()\n>           assert self.base_page.url_include(pair[1])\nE           AssertionError: assert False\nE            +  where False = <bound method BasePage.url_include of <ui.pages.base.BasePage object at 0x7fa0d1e3bf40>>('cent')\nE            +    where <bound method BasePage.url_include of <ui.pages.base.BasePage object at 0x7fa0d1e3bf40>> = <ui.pages.base.BasePage object at 0x7fa0d1e3bf40>.url_include\nE            +      where <ui.pages.base.BasePage object at 0x7fa0d1e3bf40> = <test_main_page.TestMainPage object at 0x7fa0d1e277f0>.base_page\n\ntest_ui/test_main_page.py:95: AssertionError"}, "description": "\n        1 - Login (fixture)\n        2 - Go to main page\n        3 - Move to top bar tab\n        4 - Click to link in tab\n        5 - Move to last tab\n        6 - Check url\n        7 - Check that new new tab is opened\n        ", "attachments": [{"name": "log", "source": "3cc8bb77-d863-4006-bca5-af49d764238e-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "5d582a43-767c-4399-9efa-81426b135977-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "tab", "value": "('xpath', '//a[contains(text(), \"Linux\")]')"}, {"name": "link_pairs", "value": "[(('xpath', '//a[contains(text(), \"Download Centos7\")]'), 'cent')]"}], "start": 1639472889514, "stop": 1639472893186, "uuid": "94b06759-8c77-42a0-9d11-495a275295f7", "historyId": "97916c07bdc1652f2c86eab2c5c6af2b", "testCaseId": "dce8e5aca75755fee7e3750198e53bbb", "fullName": "test_folder.test_ui.test_main_page.TestMainPage#test_tabs_valid", "labels": [{"name": "epic", "value": "UI"}, {"name": "feature", "value": "Main page"}, {"name": "tag", "value": "@pytest.mark.xfail(reason='mismatched links')"}, {"name": "tag", "value": "UI"}, {"name": "parentSuite", "value": "test_folder.test_ui"}, {"name": "suite", "value": "test_main_page"}, {"name": "subSuite", "value": "TestMainPage"}, {"name": "host", "value": "gwynbleidd-NBR-WAX9"}, {"name": "thread", "value": "30825-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_folder.test_ui.test_main_page"}]}