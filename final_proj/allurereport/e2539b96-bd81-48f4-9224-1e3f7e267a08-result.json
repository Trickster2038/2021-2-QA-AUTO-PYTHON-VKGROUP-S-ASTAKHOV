{"name": "test_invalid_multiple", "status": "skipped", "statusDetails": {"message": "XFAIL notification dont render json\n\nAssertionError: assert False\n +  where False = <bound method LoginPage.notification_text_clear of <ui.pages.register_page.RegisterPage object at 0x7f1c0290f6d0>>()\n +    where <bound method LoginPage.notification_text_clear of <ui.pages.register_page.RegisterPage object at 0x7f1c0290f6d0>> = <ui.pages.register_page.RegisterPage object at 0x7f1c0290f6d0>.notification_text_clear\n +      where <ui.pages.register_page.RegisterPage object at 0x7f1c0290f6d0> = <test_ui_forms_negative.TestRegisterPageNegative object at 0x7f1c08e33ca0>.register_page", "trace": "self = <test_ui_forms_negative.TestRegisterPageNegative object at 0x7f1c08e33ca0>\n\n    @pytest.mark.xfail(reason=\"notification dont render json\")\n    def test_invalid_multiple(self):\n        '''\n        1 - Go to registration page\n        2 - Enter random user's data with invalid name and email\n        3 - Check notifications text\n        '''\n        self.register_page.go_to_this_page()\n        self.register_page.register(\n            self.fake_person.username[0:3],\n            self.fake_person.username + 'gmail.com',\n            self.fake_person.password,\n            self.fake_person.password, True)\n        assert self.register_page.notification_include('Invalid email address')\n        assert self.register_page.notification_include(\n            'Incorrect username length')\n>       assert self.register_page.notification_text_clear()\nE       assert False\nE        +  where False = <bound method LoginPage.notification_text_clear of <ui.pages.register_page.RegisterPage object at 0x7f1c0290f6d0>>()\nE        +    where <bound method LoginPage.notification_text_clear of <ui.pages.register_page.RegisterPage object at 0x7f1c0290f6d0>> = <ui.pages.register_page.RegisterPage object at 0x7f1c0290f6d0>.notification_text_clear\nE        +      where <ui.pages.register_page.RegisterPage object at 0x7f1c0290f6d0> = <test_ui_forms_negative.TestRegisterPageNegative object at 0x7f1c08e33ca0>.register_page\n\ntest_ui_forms_negative.py:144: AssertionError"}, "description": "\n        1 - Go to registration page\n        2 - Enter random user's data with invalid name and email\n        3 - Check notifications text\n        ", "steps": [{"name": "register", "status": "passed", "parameters": [{"name": "username", "value": "'Mat'"}, {"name": "email", "value": "'Matthewgmail.com'"}, {"name": "password", "value": "'howactuallysure'"}, {"name": "confirm", "value": "'howactuallysure'"}, {"name": "accept_box", "value": "True"}], "start": 1639861528429, "stop": 1639861529690}, {"name": "check notification", "status": "passed", "attachments": [{"name": "notification", "source": "2513e05f-aafd-48f2-95c8-b8024a6cd63e-attachment.png", "type": "image/png"}], "parameters": [{"name": "msg", "value": "'Invalid email address'"}], "start": 1639861529690, "stop": 1639861530640}, {"name": "check notification", "status": "passed", "attachments": [{"name": "notification", "source": "8842dd0e-da3e-4ac6-b4f4-50b45c4c3302-attachment.png", "type": "image/png"}], "parameters": [{"name": "msg", "value": "'Incorrect username length'"}], "start": 1639861530640, "stop": 1639861531098}], "start": 1639861528085, "stop": 1639861531164, "uuid": "bca8a488-f252-4200-8df3-7fa0c6912041", "historyId": "d1834803ec38e1c3cb1261781f33ce24", "testCaseId": "0c2bcc516aa5989f69086e71a8a7492a", "fullName": "test_folder.test_ui.test_ui_forms_negative.TestRegisterPageNegative#test_invalid_multiple", "labels": [{"name": "feature", "value": "Register negative"}, {"name": "epic", "value": "UI"}, {"name": "tag", "value": "UI"}, {"name": "tag", "value": "@pytest.mark.xfail(reason='notification dont render json')"}, {"name": "parentSuite", "value": "test_folder.test_ui"}, {"name": "suite", "value": "test_ui_forms_negative"}, {"name": "subSuite", "value": "TestRegisterPageNegative"}, {"name": "host", "value": "gwynbleidd-NBR-WAX9"}, {"name": "thread", "value": "159897-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_folder.test_ui.test_ui_forms_negative"}]}